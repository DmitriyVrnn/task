{"version":3,"sources":["constants/index.js","actions/userAction.js","components/Comment/index.js","components/CommentList/index.js","components/Portal/index.js","components/Modal/index.js","components/User/index.js","components/AddUser/index.js","components/Carousel/index.js","actions/commentAction.js","containers/UserInfo/index.js","components/UserList/index.js","containers/Users/index.js","components/Navigation/index.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/commentReducer.js","reducers/index.js","store.js","index.js"],"names":["API","changeActiveUser","id","type","addUser","data","payload","uuid","name","avatar","getUser","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","fetchUser","user","wrap","_context2","prev","next","axios","get","concat","sent","abrupt","t0","stop","_x2","apply","this","arguments","Comment","_ref","comment","title","phone","react_default","createElement","Fragment","className","CommentList","comments","length","map","item","body","undefined","key","components_Comment","Portal","el","document","appendChild","removeChild","children","props","ReactDOM","createPortal","React","Component","Modal","isOpen","onCancel","components_Portal","onClick","defaultProps","User","surname","vacancy","address","isActive","isHidden","src","alt","AddUser","onSubmit","_useState","useState","_useState2","slicedToArray","setName","e","preventDefault","placeholder","value","onChange","target","required","Carousel","users","activeUserChanged","clearStore","count","setCount","_useState3","_useState4","setOpen","moveSlide","increment","lastSlide","currentSlide","react_router_dom","to","components_User","components_Modal","components_AddUser","addComment","clearCommentFromStore","UserInfo","state","handleInputChange","_this","setState","changeActiveUserConnect","handleSubmit","_this$state","addCommentConnect","renderComments","_this$props","userConnect","commentConnect","newCommentsArray","getLastFiveComments","slice","Math","max","components_CommentList","_this$props2","itemId","getUserConnect","_this2","_this$props3","usersConnect","addUserConnect","clearStoreConnect","_this$state2","enabledBtn","react_router","path","render","components_Carousel","cols","rows","react_input_mask_default","mask","disabled","connect","userList","bindActionCreators","UserList","components_UserList","Navigation","component","Users","exact","match","params","containers_UserInfo","App","fetchAllUsersConnect","useEffect","components_Navigation","_callee","fetchUsers","_context","_x","Boolean","window","location","hostname","initialState","combineReducers","action","objectSpread","toConsumableArray","activeUser","store","createStore","reducers","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fafe9712.chunk.js","sourcesContent":["export const API = 'http://jg54r.mocklab.io';\r\n\r\nexport const FETCH_USERS = 'FETCH_USER';\r\nexport const GET_USER_FROM_API = 'GET_USER_FROM_API';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const CHANGE_ACTIVE_USER = 'CHANGE_ACTIVE_USER';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DEFAULT_STATE = 'DEFAULT_STATE';\n","import axios from 'axios';\nimport uuid from 'uuid';\n\nimport {\n  FETCH_USERS, API, CHANGE_ACTIVE_USER,\n  GET_USER_FROM_API, ADD_USER,\n} from '../constants';\n\nexport const changeActiveUser = id => ({\n  type: CHANGE_ACTIVE_USER,\n  id,\n});\n\nexport const addUser = data => ({\n  type: ADD_USER,\n  payload: {\n    id: uuid(),\n    name: data.name,\n    avatar: 'https://www.gravatar.com/userimage/160584717/d4dffbc5c602fd15c4b4ffe1d27c0fc5?size=120',\n  },\n});\n\nexport const fetchAllUsers = () => async (dispatch) => {\n  const fetchUsers = (users) => {\n    dispatch({\n      type: FETCH_USERS,\n      users,\n    });\n    return users;\n  };\n  try {\n    const users = await axios.get(`${API}/users`);\n    return fetchUsers(users.data);\n  } catch (e) {\n    throw (e);\n  }\n};\n\nexport const getUser = id => async (dispatch) => {\n  const fetchUser = (data) => {\n    dispatch({\n      type: GET_USER_FROM_API,\n      data,\n    });\n    return data;\n  };\n  try {\n    const user = await axios.get(`${API}/users/${id}`);\n    return fetchUser(user.data);\n  } catch (e) {\n    throw (e);\n  }\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Comment = ({ comment, title, phone }) => (\r\n  <>\r\n    <h2 className=\"title\">{title}</h2>\r\n    <p className=\"body\">{comment}</p>\r\n    <span className=\"phone\">{phone}</span>\r\n  </>\r\n);\r\n\r\nexport default Comment;\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Comment from '../Comment';\r\n\r\nimport './styles.css';\r\n\r\nconst CommentList = ({ comments }) => {\r\n  if (!comments.length) {\r\n    return (\r\n      <p>\r\n          Комментарии отсутствуют\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"list-comments\">\r\n      {comments.map((item) => {\r\n        const { title, phone, body } = item;\r\n        if (item !== undefined) {\r\n          return (\r\n            <article\r\n              className=\"comment-wrapper\"\r\n              key={item.id}\r\n            >\r\n              <li className=\"comment\">\r\n                <Comment\r\n                  title={title}\r\n                  phone={phone}\r\n                  comment={body}\r\n                />\r\n              </li>\r\n            </article>\r\n          );\r\n        } return null;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n\r\nCommentList.propTypes = {\r\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Portal extends React.Component {\r\n  el = document.createElement('div');\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n\r\nPortal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portal from '../Portal';\r\nimport './styles.css';\r\n\r\nconst Modal = ({\n  title, isOpen, onCancel, children,\n}) => (\r\n  <>\r\n    {isOpen && (\r\n      <Portal>\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-window\">\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title\">{title}</div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {children}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button onClick={onCancel}><i className=\"fas fa-times-circle\" /></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    )\r\n      }\r\n  </>\r\n);\r\n\r\nModal.propTypes = {\r\n  title: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  onCancel: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nModal.defaultProps = {\r\n  title: 'Modal window',\r\n  isOpen: false,\r\n  onCancel: () => {\r\n  },\r\n  children: null,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.css';\r\n\r\nconst User = ({\r\n  name, surname, vacancy, avatar, address, isActive, isHidden,\r\n}) => (\r\n  <>\r\n    <img\r\n      className=\"avatar\"\r\n      src={avatar}\r\n      alt={name}\r\n      title={name}\r\n    />\r\n    <div className=\"user-data\">\r\n      <p className=\"info name\">\r\n        <span className={isActive ? 'hidden' : 'label'}>Имя:</span>\r\n        {name}\r\n      </p>\r\n      <p className=\"info surname\">\r\n        <span className={isActive ? 'hidden' : 'label'}>Фамилия:</span>\r\n        {surname}\r\n      </p>\r\n      <p className=\"info vacancy\">\r\n        <span className={isActive ? 'hidden' : 'label'}>Должность:</span>\r\n        {vacancy}\r\n      </p>\r\n      <p className=\"info address\">\r\n        <span className={isActive || isHidden ? 'hidden' : 'label'}>Адрес:</span>\r\n        {address}\r\n      </p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default User;\r\n\r\nUser.defaultProps = {\r\n  name: '',\r\n  surname: '',\r\n  address: '',\r\n  vacancy: '',\r\n  avatar: '',\r\n  isActive: false,\r\n  isHidden: false,\r\n};\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string,\r\n  surname: PropTypes.string,\r\n  address: PropTypes.string,\r\n  vacancy: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n  isHidden: PropTypes.bool,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.css';\r\n\r\nconst AddUser = ({ addUser, onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addUser({ name });\r\n    setName('');\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"modal-form\"\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-name\"\r\n        placeholder=\"Имя\"\r\n        value={name}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <button\r\n        className=\"btn-modal-submit\"\r\n        type=\"submit\"\r\n      >\r\n          Добавить\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n\r\nAddUser.propTypes = {\r\n  addUser: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../Modal';\r\nimport User from '../User';\r\nimport AddUser from '../AddUser';\r\n\r\nimport './styles.css';\r\n\r\nconst Carousel = ({\r\n  users, activeUserChanged, addUser, getUser, clearStore,\r\n}) => {\r\n  const [count, setCount] = useState(0);\r\n  const [isOpen, setOpen] = useState(false);\r\n  const isActive = true;\r\n\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    getUser(users[count].id);\r\n    clearStore();\r\n  };\r\n\r\n  const moveSlide = (increment, lastSlide) => {\r\n    const currentSlide = count;\r\n    if (currentSlide === lastSlide && increment === 1) {\r\n      setCount(0);\r\n    } else if (currentSlide === lastSlide && increment === -1) {\r\n      setCount(count + increment);\r\n    } else if (currentSlide === 0 && increment === -1) setCount(lastSlide);\r\n    else if (currentSlide < lastSlide) setCount(count + increment);\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider-wrapper\">\r\n      {users !== undefined\r\n        ? (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              className=\"slider-prev\"\r\n              onClick={() => moveSlide(-1, users.length - 1)}\r\n            >\r\n                &#10094;\r\n            </button>\r\n            <div className=\"slide-wrapper\">\r\n              {users[count] !== undefined ? (\r\n                <>\r\n                  <div\r\n                    className=\"slide-info\"\r\n                    onClick={() => activeUserChanged(users[count].id)}\r\n                  >\r\n                    <Link onClick={handleClick} to={`/${users[count].id}`}>\r\n                      <User\r\n                        isActive={isActive}\r\n                        avatar={users[count].avatar}\r\n                        name={users[count].name}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-modal\"\r\n                onClick={openModal}\r\n              >\r\n                <i className=\"fas fa-plus\" />\r\n                  Добавить пользователя\r\n              </button>\r\n              <Modal\r\n                title=\"Добавить пользователя\"\r\n                isOpen={isOpen}\r\n                onCancel={handleCancel}\r\n              >\r\n                <AddUser\r\n                  addUser={addUser}\r\n                  onSubmit={handleSubmit}\r\n                />\r\n              </Modal>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"slider-next\"\r\n              onClick={() => moveSlide(1, users.length - 1)}\r\n            >\r\n                &#10095;\r\n            </button>\r\n          </>\r\n        ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n\r\nCarousel.propTypes = {\r\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  activeUserChanged: PropTypes.func.isRequired,\r\n  getUser: PropTypes.func.isRequired,\r\n  addUser: PropTypes.func.isRequired,\r\n  clearStore: PropTypes.func.isRequired,\r\n};\n","import uuid from 'uuid';\nimport { ADD_COMMENT, DEFAULT_STATE } from '../constants';\n\nexport const addComment = data => ({\n  type: ADD_COMMENT,\n  payload: {\n    id: uuid(),\n    title: data.title,\n    body: data.body,\n    phone: data.phone,\n  },\n});\n\nexport const clearCommentFromStore = () => ({\n  type: DEFAULT_STATE,\n});\n","import React, { Component } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport CommentList from '../../components/CommentList/index';\r\nimport Carousel from '../../components/Carousel';\r\nimport User from '../../components/User';\r\nimport { addComment, clearCommentFromStore } from '../../actions/commentAction';\r\nimport { addUser, changeActiveUser, getUser } from '../../actions/userAction';\r\n\r\nimport './styles.css';\r\n\r\nclass UserInfo extends Component {\r\n  state = {\r\n    title: '',\r\n    body: '',\r\n    phone: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { itemId, getUserConnect } = this.props;\r\n    getUserConnect(itemId);\r\n  }\r\n\r\n  handleInputChange = type => (e) => {\r\n    switch (type) {\r\n      case 'title':\r\n        return this.setState({ title: e.target.value });\r\n      case 'body':\r\n        return this.setState({ body: e.target.value });\r\n      case 'phone':\r\n        return this.setState({ phone: e.target.value });\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  activeUserChanged = (id) => {\r\n    const { changeActiveUserConnect } = this.props;\r\n    changeActiveUserConnect(id);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { title, body, phone } = this.state;\r\n    const { addCommentConnect } = this.props;\r\n    addCommentConnect({ title, body, phone });\r\n    this.setState({\r\n      title: '',\r\n      body: '',\r\n      phone: '',\r\n    });\r\n  };\r\n\r\n  renderComments = () => {\r\n    const { userConnect, commentConnect } = this.props;\r\n    const { comments } = userConnect;\r\n    if (comments !== undefined) {\r\n      const newCommentsArray = comments.concat(commentConnect);\r\n      const getLastFiveComments = newCommentsArray.slice(Math.max(newCommentsArray.length - 5, 1));\r\n      return (\r\n        <CommentList comments={getLastFiveComments} />\r\n      );\r\n    }\r\n    return (<p>Комментарии отсутствуют</p>);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      userConnect, usersConnect, getUserConnect, addUserConnect, clearStoreConnect,\r\n    } = this.props;\r\n    const {\r\n      name, surname, address, vacancy, avatar,\r\n    } = userConnect;\r\n    const { title, body, phone } = this.state;\r\n    const enabledBtn = title.length >= 5 && title.length <= 80 && body.length <= 128;\r\n    return (\r\n      <>\r\n        <Route\r\n          path=\"/:id\"\r\n          render={() => (\r\n            <Carousel\r\n              users={usersConnect}\r\n              activeUserChanged={this.activeUserChanged}\r\n              getUser={getUserConnect}\r\n              clearStore={clearStoreConnect}\r\n              addUser={addUserConnect}\r\n            />\r\n          )}\r\n        />\r\n        <div className=\"user-info\">\r\n          <div className=\"user-block-info\">\r\n            <User\r\n              name={name}\r\n              surname={surname}\r\n              vacancy={vacancy}\r\n              avatar={avatar}\r\n              address={address}\r\n            />\r\n          </div>\r\n          <h3>Написать комментарий</h3>\r\n          <form className=\"form-post\" onSubmit={this.handleSubmit}>\r\n            <div className=\"block-inputs\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-title\"\r\n                placeholder=\"Введите заголовок\"\r\n                value={title}\r\n                onChange={this.handleInputChange('title')}\r\n                required\r\n              />\r\n              <textarea\r\n                cols=\"21\"\r\n                rows=\"10\"\r\n                placeholder=\"Введите сообщение...\"\r\n                name=\"body\"\r\n                className=\"input-body\"\r\n                onChange={this.handleInputChange('body')}\r\n                value={body}\r\n                required\r\n              />\r\n              <InputMask\r\n                className=\"input-phone\"\r\n                placeholder=\"Введите телефон\"\r\n                mask=\"+7 (999) 999-99-99\"\r\n                value={phone}\r\n                onChange={this.handleInputChange('phone')}\r\n                required\r\n              />\r\n            </div>\r\n            <button className=\"btn-add_post\" type=\"submit\" disabled={!enabledBtn}>Отправить</button>\r\n          </form>\r\n          <div className=\"comment-block\">\r\n            <h3 className=\"label-comments\">Комментарии:</h3>\r\n            {this.renderComments()}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  commentConnect: state.comment,\r\n  usersConnect: state.users.userList,\r\n  userConnect: state.users.user,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  addCommentConnect: addComment,\r\n  changeActiveUserConnect: changeActiveUser,\r\n  clearStoreConnect: clearCommentFromStore,\r\n  addUserConnect: addUser,\r\n  getUserConnect: getUser,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\r\n\r\nUserInfo.propTypes = {\r\n  commentConnect: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  usersConnect: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  userConnect: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  addCommentConnect: PropTypes.func.isRequired,\r\n  changeActiveUserConnect: PropTypes.func.isRequired,\r\n  clearStoreConnect: PropTypes.func.isRequired,\r\n  addUserConnect: PropTypes.func.isRequired,\r\n  getUserConnect: PropTypes.func.isRequired,\r\n  itemId: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport User from '../User';\r\n\r\nimport './styles.css';\r\n\r\nconst UserList = ({ users, activeUserChanged }) => {\r\n  if (!users.length) {\r\n    return (\r\n      <p className=\"users-empty\">\r\n          Пользователи отсутствуют\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"list\">\r\n      <ul className=\"list-users\">\r\n        <h1 className=\"list-title\">Список сотрудников</h1>\r\n        {users.map((user) => {\r\n          const {\r\n            name, surname, vacancy, avatar, id,\r\n          } = user;\r\n          return (\r\n            <Link\r\n              key={id}\r\n              to={`${id}`}\r\n            >\r\n              <li\r\n                className=\"list-item\"\r\n                onClick={() => activeUserChanged(id)}\r\n              >\r\n                <User\r\n                  name={name}\r\n                  surname={surname}\r\n                  vacancy={vacancy}\r\n                  avatar={avatar}\r\n                  isHidden\r\n                />\r\n              </li>\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\nUserList.defaultProps = {\r\n  users: [],\r\n  activeUserChanged: () => {},\r\n};\r\n\r\nUserList.propTypes = {\r\n  users: PropTypes.arrayOf(PropTypes.object),\r\n  activeUserChanged: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UserList from '../../components/UserList';\r\nimport { changeActiveUser } from '../../actions/userAction';\r\n\r\nconst Users = ({ usersConnect, changeActiveUserConnect }) => {\r\n  const activeUserChanged = (id) => {\r\n    changeActiveUserConnect(id);\r\n  };\r\n  return (\r\n    <UserList\r\n      users={usersConnect}\r\n      activeUserChanged={activeUserChanged}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(state => ({\r\n  usersConnect: state.users.userList,\r\n}), {\r\n  changeActiveUserConnect: changeActiveUser,\r\n})(Users);\r\n\r\nUsers.propTypes = {\r\n  usersConnect: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  changeActiveUserConnect: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport UserInfo from '../../containers/UserInfo';\r\nimport Users from '../../containers/Users';\r\n\r\nconst Navigation = () => (\r\n  <Switch>\r\n    <Route path=\"/\" component={Users} exact />\r\n    <Route\r\n      path=\"/:id\"\r\n      render={({ match }) => {\r\n        const { id } = match.params;\r\n        return (\r\n          <UserInfo\r\n            itemId={id}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  </Switch>\r\n);\r\nexport default Navigation;\r\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchAllUsers } from './actions/userAction';\nimport './App.css';\nimport Navigation from './components/Navigation';\n\nconst App = ({ fetchAllUsersConnect }) => {\n  useEffect(() => {\n    fetchAllUsersConnect();\n  }, [fetchAllUsersConnect]);\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navigation />\n      </div>\n    </Router>\n  );\n};\n\nexport default connect(null, { fetchAllUsersConnect: fetchAllUsers })(App);\n\nApp.defaultProps = {\n  fetchAllUsersConnect: () => {},\n};\n\nApp.propTypes = {\n  fetchAllUsersConnect: PropTypes.func,\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  ADD_USER, CHANGE_ACTIVE_USER, FETCH_USERS, GET_USER_FROM_API,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n  userList: [],\r\n  user: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const users = state.userList;\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        userList: action.users,\r\n      };\r\n    case GET_USER_FROM_API:\r\n      return {\r\n        ...state,\r\n        user: action.data,\r\n      };\r\n    case ADD_USER:\r\n      return {\r\n        ...state,\r\n        userList: [...users, action.payload],\r\n      };\r\n    case CHANGE_ACTIVE_USER:\r\n      return {\r\n        ...state,\r\n        activeUser: action.id,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_COMMENT, DEFAULT_STATE } from '../constants';\r\n\r\nconst comment = [];\r\n\r\nexport default (state = comment, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT:\r\n      return [...state, action.payload];\r\n    case DEFAULT_STATE:\r\n      return comment;\r\n    default:\r\n      return state;\r\n  }\r\n};\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport commentReducer from './commentReducer';\r\n\r\nexport default combineReducers({\r\n  users: userReducer,\r\n  comment: commentReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst initialState = {};\r\nconst store = createStore(reducers, initialState, compose(applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}